@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
   
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            var currentUri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            if (!currentUri.StartsWith("Account/Login"))
            {
                NavigationManager.NavigateTo($"Account/Login?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}", forceLoad: true);
            }
        }
    
    }
}
